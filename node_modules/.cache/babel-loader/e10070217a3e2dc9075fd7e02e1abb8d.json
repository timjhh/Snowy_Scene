{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\timjh\\\\Documents\\\\GitHub\\\\Snowy_Scene\\\\src\\\\Environment.jsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport * as Tone from 'tone';\nimport React, { useState } from 'react';\nimport * as d3 from 'd3';\nimport Legend from './Legend.jsx';\nimport Cube from './Cube.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Environment() {\n  _s();\n\n  // Control the current scale we're playing in\n  const scaleRef = React.useRef(options.scale); // Correctly start the simulation/audio\n\n  const startRef = React.useRef(start); // Control the minimum speed of cubes\n\n  const speedRef = React.useRef(options.speed); // Control the range of notes available to modify\n\n  const rangeRef = React.useRef(range);\n  let numCubes = 6; // Define some music theory terms\n  // Starting at 'C0' and ending at 'G#9'\n\n  const min = 1;\n  const max = 9;\n  const midpoint = (max - min) / 2;\n  const modes = ['Major', 'Minor'];\n  const notes = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#']; // W - Whole step\n  // H - Half step\n  // 'Final' notes are omitted to avoid duplicates i.e. C major ends at B, not C\n  // Major scales follow the pattern of W-W-H-W-W-W-H\n\n  const major = [0, 2, 4, 5, 7, 9, 11]; // Minor scales follow the pattern of W-H-W-W-H-W-W\n\n  const minor = [0, 2, 3, 5, 7, 8, 10]; // On change, calculate a new scale with input values\n\n  function appOnChange() {\n    options.scale = [];\n    let arr = mode === \"Major\" ? major : minor;\n    let start = notes.indexOf(note);\n    arr.forEach(function (d) {\n      options.scale.push(notes[(d + start) % notes.length]);\n    });\n    scaleRef.current = options.scale;\n  } // Discrete color scheme\n\n\n  let colorC = d => d3.schemePaired[d % 10];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"asdfasdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Environment, \"1eZbY5DHbj6O597OzzKDExLLFrY=\");\n\n_c = Environment;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Environment\");","map":{"version":3,"sources":["C:/Users/timjh/Documents/GitHub/Snowy_Scene/src/Environment.jsx"],"names":["Tone","React","useState","d3","Legend","Cube","Environment","scaleRef","useRef","options","scale","startRef","start","speedRef","speed","rangeRef","range","numCubes","min","max","midpoint","modes","notes","major","minor","appOnChange","arr","mode","indexOf","note","forEach","d","push","length","current","colorC","schemePaired","App"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;;AAGA,SAASC,WAAT,GAAuB;AAAA;;AAMrB;AACA,QAAMC,QAAQ,GAAGN,KAAK,CAACO,MAAN,CAAaC,OAAO,CAACC,KAArB,CAAjB,CAPqB,CAQrB;;AACA,QAAMC,QAAQ,GAAGV,KAAK,CAACO,MAAN,CAAaI,KAAb,CAAjB,CATqB,CAUrB;;AACA,QAAMC,QAAQ,GAAGZ,KAAK,CAACO,MAAN,CAAaC,OAAO,CAACK,KAArB,CAAjB,CAXqB,CAYrB;;AACA,QAAMC,QAAQ,GAAGd,KAAK,CAACO,MAAN,CAAaQ,KAAb,CAAjB;AAIA,MAAIC,QAAQ,GAAG,CAAf,CAjBqB,CAmBrB;AACA;;AACA,QAAMC,GAAG,GAAG,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAZ;AAEA,QAAMC,QAAQ,GAAG,CAACD,GAAG,GAACD,GAAL,IAAU,CAA3B;AAEA,QAAMG,KAAK,GAAG,CAAC,OAAD,EAAU,OAAV,CAAd;AACA,QAAMC,KAAK,GAAG,CAAC,GAAD,EAAK,IAAL,EAAU,GAAV,EAAc,GAAd,EAAkB,IAAlB,EAAuB,GAAvB,EAA2B,IAA3B,EAAgC,GAAhC,EAAoC,GAApC,EAAwC,IAAxC,EAA6C,GAA7C,EAAiD,IAAjD,CAAd,CA3BqB,CA6BrB;AACA;AACA;AAEA;;AACA,QAAMC,KAAK,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,EAAb,CAAd,CAlCqB,CAoCrB;;AACA,QAAMC,KAAK,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,EAAb,CAAd,CArCqB,CAwCrB;;AACA,WAASC,WAAT,GAAuB;AACvBhB,IAAAA,OAAO,CAACC,KAAR,GAAgB,EAAhB;AACA,QAAIgB,GAAG,GAAIC,IAAI,KAAK,OAAV,GAAqBJ,KAArB,GAA6BC,KAAvC;AACA,QAAIZ,KAAK,GAAGU,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAZ;AAEAH,IAAAA,GAAG,CAACI,OAAJ,CAAY,UAASC,CAAT,EAAY;AAEtBtB,MAAAA,OAAO,CAACC,KAAR,CAAcsB,IAAd,CAAmBV,KAAK,CAAE,CAACS,CAAC,GAAGnB,KAAL,IAAcU,KAAK,CAACW,MAAtB,CAAxB;AACE,KAHJ;AAKA1B,IAAAA,QAAQ,CAAC2B,OAAT,GAAmBzB,OAAO,CAACC,KAA3B;AAED,GArDsB,CAwDrB;;;AACA,MAAIyB,MAAM,GAAIJ,CAAD,IAAO5B,EAAE,CAACiC,YAAH,CAAgBL,CAAC,GAAG,EAApB,CAApB;;AAEA,sBACE;AAAA,2BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,mBADF;AAOD;;GAlEQzB,W;;KAAAA,W;AAoET,eAAe+B,GAAf","sourcesContent":["import './App.css';\r\nimport * as Tone from 'tone'\r\nimport React, { useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport Legend from './Legend.jsx';\r\nimport Cube from './Cube.jsx';\r\n\r\n\r\nfunction Environment() {\r\n\r\n\r\n\r\n\r\n\r\n  // Control the current scale we're playing in\r\n  const scaleRef = React.useRef(options.scale);\r\n  // Correctly start the simulation/audio\r\n  const startRef = React.useRef(start);\r\n  // Control the minimum speed of cubes\r\n  const speedRef = React.useRef(options.speed);\r\n  // Control the range of notes available to modify\r\n  const rangeRef = React.useRef(range);\r\n\r\n\r\n\r\n  let numCubes = 6;\r\n\r\n  // Define some music theory terms\r\n  // Starting at 'C0' and ending at 'G#9'\r\n  const min = 1;\r\n  const max = 9;\r\n\r\n  const midpoint = (max-min)/2;\r\n\r\n  const modes = ['Major', 'Minor'];\r\n  const notes = ['A','A#','B','C','C#','D','D#','E','F','F#','G','G#'];\r\n\r\n  // W - Whole step\r\n  // H - Half step\r\n  // 'Final' notes are omitted to avoid duplicates i.e. C major ends at B, not C\r\n\r\n  // Major scales follow the pattern of W-W-H-W-W-W-H\r\n  const major = [0,2,4,5,7,9,11];\r\n\r\n  // Minor scales follow the pattern of W-H-W-W-H-W-W\r\n  const minor = [0,2,3,5,7,8,10]; \r\n\r\n  \r\n  // On change, calculate a new scale with input values\r\n  function appOnChange() {\r\n  options.scale = [];\r\n  let arr = (mode === \"Major\") ? major : minor;\r\n  let start = notes.indexOf(note);\r\n\r\n  arr.forEach(function(d) {\r\n\r\n    options.scale.push(notes[((d + start) % notes.length)]);\r\n     });\r\n\r\n  scaleRef.current = options.scale;\r\n\r\n}\r\n\r\n\r\n  // Discrete color scheme\r\n  let colorC = (d) => d3.schemePaired[d % 10];\r\n\r\n  return (\r\n    <>\r\n\r\n      <p>asdfasdf</p>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}