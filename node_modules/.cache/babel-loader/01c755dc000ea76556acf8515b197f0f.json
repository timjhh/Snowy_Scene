{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\timjh\\\\Documents\\\\GitHub\\\\Three.js-Example\\\\cube-notes\\\\src\\\\Cube.jsx\";\nimport './App.css';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport * as THREE from 'three';\nimport * as Tone from 'tone';\nimport React, { useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cube(props) {\n  function main() {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n    const max = 4; // Create standard box geometry\n\n    var geometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n    var bb = new THREE.BoxGeometry(max * Math.E, max * Math.E, max * Math.E);\n    const cr = new THREE.Color(\"#\" + Math.floor(Math.random() * 16777215).toString(16)); // Create bounding box render\n\n    const bound = new THREE.BoxHelper(new THREE.Mesh(bb, new THREE.MeshBasicMaterial(0xff0000)), 0xffffff);\n    scene.add(bound); // const controls = new THREE.OrbitControls( camera, renderer.domElement );\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    const rv = new THREE.Vector2(scene.getSize);\n    camera.position.z = 15; //camera.position.y = 15;\n    //camera.rotation.z = Math.PI/4;\n\n    var dx = 0.05;\n    var dy = 0.05;\n    var dz = 0.05;\n    var scale_len = props.scaleRef.current.length;\n    var max_speed = 0.05;\n    var cubes = [];\n\n    for (var i = 0; i < props.maxCubes; i++) {\n      const material = new THREE.MeshBasicMaterial({\n        color: props.color(i)\n      });\n      const cube = new THREE.Mesh(geometry, material);\n      cubes[i] = cube;\n      cubes[i].note = (props.scaleRef.current[i % scale_len] + Math.floor(Math.random() * 7)).toString();\n      cubes[i].synth = new Tone.FMSynth().toDestination(); //cubes[i].synth = new Tone.Reverb();\n\n      cubes[i].dx = Math.sin(Math.random() - 0.5) * max_speed; //cubes[i].dy = Math.sin((Math.random()-0.5)) * max_speed;\n      //cubes[i].dz = Math.sin((Math.random()-0.5)) * max_speed;\n\n      cubes[i].dy = 0;\n      cubes[i].dz = 0;\n      scene.add(cube);\n    }\n\n    console.log(props.scaleRef);\n\n    function animate() {\n      cubes.forEach(function (d, idx) {\n        //d.rotation.x += dx;\n        //d.rotation.y += dx;\n        //const synth = new Tone.Synth().toDestination();\n        if (Math.abs(d.position.x) >= max) {\n          d.position.x = 0;\n          d.position.y = 0;\n          d.position.z = 0;\n          d.synth.triggerAttackRelease(d.note, \"8n\"); // d.dx = Math.sin((Math.random()-0.5)) * max_speed;\n          // d.dy = Math.sin((Math.random()-0.5)) * max_speed;\n          // d.dz = Math.sin((Math.random()-0.5)) * max_speed;\n        }\n\n        if (Math.abs(d.position.y) >= max) {\n          d.position.x = 0;\n          d.position.y = 0;\n          d.position.z = 0;\n          d.synth.triggerAttackRelease(d.note, \"8n\"); // d.dx = Math.sin((Math.random()-0.5)) * max_speed;\n          // d.dy = Math.sin((Math.random()-0.5)) * max_speed;\n          // d.dz = Math.sin((Math.random()-0.5)) * max_speed;\n        }\n\n        if (Math.abs(d.position.z) >= max) {\n          d.position.x = 0;\n          d.position.y = 0;\n          d.position.z = 0;\n          d.synth.triggerAttackRelease(d.note, \"8n\"); // d.dx = Math.sin((Math.random()-0.5)) * max_speed;\n          // d.dy = Math.sin((Math.random()-0.5)) * max_speed;\n          // d.dz = Math.sin((Math.random()-0.5)) * max_speed;\n        } // d.position.x += dx;\n        // d.position.y += dy;\n        // d.position.z += dz;\n\n\n        d.position.x += d.dx;\n        d.position.y += d.dy;\n        d.position.z += d.dz; //Math.sin(Math.random(max)) * max\n      });\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n\n    animate();\n  }\n\n  window.onload = main;\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Cube;\nexport default _c2 = /*#__PURE__*/React.memo(Cube);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cube\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/timjh/Documents/GitHub/Three.js-Example/cube-notes/src/Cube.jsx"],"names":["OrbitControls","THREE","Tone","React","useState","d3","Cube","props","main","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","max","geometry","BoxGeometry","bb","Math","E","cr","Color","floor","random","toString","bound","BoxHelper","Mesh","MeshBasicMaterial","add","controls","rv","Vector2","getSize","position","z","dx","dy","dz","scale_len","scaleRef","current","length","max_speed","cubes","i","maxCubes","material","color","cube","note","synth","FMSynth","toDestination","sin","console","log","animate","forEach","d","idx","abs","x","y","triggerAttackRelease","requestAnimationFrame","render","onload","memo"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport * as THREE from 'three';\r\nimport * as Tone from 'tone';\r\nimport React, { useState } from 'react';\r\nimport * as d3 from 'd3';\r\nfunction Cube(props) {\r\n\r\n\r\n\r\nfunction main() {\r\n\r\n  const scene = new THREE.Scene();\r\n  const camera = new THREE.PerspectiveCamera( 90, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n\r\n  const renderer = new THREE.WebGLRenderer();\r\n  renderer.setSize( window.innerWidth, window.innerHeight );\r\n  document.body.appendChild( renderer.domElement );\r\n\r\n\r\n  const max = 4;\r\n\r\n  // Create standard box geometry\r\n  var geometry = new THREE.BoxGeometry( 0.5, 0.5, 0.5 );\r\n\r\n\r\n  var bb = new THREE.BoxGeometry(max*Math.E,max*Math.E,max*Math.E);\r\n\r\n\r\n  const cr = new THREE.Color(\"#\" + Math.floor(Math.random()*16777215).toString(16));\r\n\r\n  // Create bounding box render\r\n  const bound = new THREE.BoxHelper(new THREE.Mesh(bb, new THREE.MeshBasicMaterial( 0xff0000 )), 0xffffff);\r\n\r\n\r\n  scene.add(bound);\r\n\r\n  // const controls = new THREE.OrbitControls( camera, renderer.domElement );\r\n  const controls = new OrbitControls( camera, renderer.domElement );\r\n\r\n  const rv = new THREE.Vector2(scene.getSize);\r\n\r\n  camera.position.z = 15;\r\n  //camera.position.y = 15;\r\n\r\n  //camera.rotation.z = Math.PI/4;\r\n\r\n  var dx = 0.05;\r\n  var dy = 0.05;\r\n  var dz = 0.05;\r\n\r\n  var scale_len = props.scaleRef.current.length;\r\n  var max_speed = 0.05;\r\n  var cubes = [];\r\n\r\n  for(var i = 0; i < props.maxCubes; i++) {\r\n\r\n\r\n    const material = new THREE.MeshBasicMaterial( { \r\n      color: props.color(i) } );\r\n\r\n    const cube = new THREE.Mesh( geometry, material );\r\n    cubes[i] = cube;\r\n\r\n    cubes[i].note = (props.scaleRef.current[i % scale_len] + Math.floor(Math.random() * 7)).toString();\r\n    cubes[i].synth = new Tone.FMSynth().toDestination();\r\n    //cubes[i].synth = new Tone.Reverb();\r\n\r\n    cubes[i].dx = Math.sin((Math.random()-0.5)) * max_speed;\r\n    //cubes[i].dy = Math.sin((Math.random()-0.5)) * max_speed;\r\n    //cubes[i].dz = Math.sin((Math.random()-0.5)) * max_speed;\r\n    cubes[i].dy = 0;\r\n    cubes[i].dz = 0;\r\n\r\n    scene.add(cube);  \r\n\r\n  }\r\n\r\n  console.log(props.scaleRef);\r\n\r\n\r\n  function animate() {\r\n\r\n\r\n      cubes.forEach(function(d,idx) {\r\n\r\n      //d.rotation.x += dx;\r\n      //d.rotation.y += dx;\r\n\r\n      //const synth = new Tone.Synth().toDestination();\r\n\r\n      if(Math.abs(d.position.x) >= max) {\r\n        d.position.x = 0;\r\n        d.position.y = 0;\r\n        d.position.z = 0;\r\n        d.synth.triggerAttackRelease(d.note, \"8n\");\r\n        // d.dx = Math.sin((Math.random()-0.5)) * max_speed;\r\n        // d.dy = Math.sin((Math.random()-0.5)) * max_speed;\r\n        // d.dz = Math.sin((Math.random()-0.5)) * max_speed;\r\n\r\n      }\r\n      if(Math.abs(d.position.y) >= max) {\r\n        d.position.x = 0;\r\n        d.position.y = 0;\r\n        d.position.z = 0;\r\n        d.synth.triggerAttackRelease(d.note, \"8n\");\r\n        // d.dx = Math.sin((Math.random()-0.5)) * max_speed;\r\n        // d.dy = Math.sin((Math.random()-0.5)) * max_speed;\r\n        // d.dz = Math.sin((Math.random()-0.5)) * max_speed;\r\n      }\r\n      if(Math.abs(d.position.z) >= max) {\r\n        d.position.x = 0;\r\n        d.position.y = 0;\r\n        d.position.z = 0;\r\n        d.synth.triggerAttackRelease(d.note, \"8n\");\r\n        // d.dx = Math.sin((Math.random()-0.5)) * max_speed;\r\n        // d.dy = Math.sin((Math.random()-0.5)) * max_speed;\r\n        // d.dz = Math.sin((Math.random()-0.5)) * max_speed;\r\n      }\r\n\r\n\r\n      // d.position.x += dx;\r\n      // d.position.y += dy;\r\n      // d.position.z += dz;\r\n\r\n      d.position.x += d.dx;\r\n      d.position.y += d.dy;\r\n      d.position.z += d.dz;\r\n      //Math.sin(Math.random(max)) * max\r\n\r\n    });\r\n\r\n    requestAnimationFrame( animate );\r\n    renderer.render( scene, camera );\r\n\r\n  }\r\n\r\n  animate();\r\n\r\n}\r\n\r\n\r\nwindow.onload = main;\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default React.memo(Cube);"]},"metadata":{},"sourceType":"module"}