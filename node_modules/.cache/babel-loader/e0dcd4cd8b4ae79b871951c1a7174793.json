{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\timjh\\\\Documents\\\\GitHub\\\\Three.js-Example\\\\cube-notes\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport * as Tone from 'tone';\nimport React, { useState } from 'react';\nimport * as d3 from 'd3';\nimport Legend from './Legend.jsx';\nimport Cube from './Cube.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var options = {\n    note: 'A',\n    mode: \"Major\",\n    tempo: 90,\n    scale: ['A', 'B', 'C', 'D', 'E', 'F', 'G']\n  };\n  const [mode, setMode] = useState(options.mode);\n  const [note, setNote] = useState(options.note);\n  const [tempo, setTempo] = useState(options.tempo);\n  let [scale, setScale] = useState(options.scale); //const [play, setPlay] = useState(options.play);\n\n  const scaleRef = React.useRef(options.scale);\n  scaleRef.current = options.scale; // Define some music theory terms\n  // Starting at 'C0' and ending at 'G#9'\n\n  const min = 0;\n  const max = 9;\n  const modes = ['Major', 'Minor'];\n  const baseNotes = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\n  const notes = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#']; // W - Whole step\n  // H - Half step\n  // 'Final' notes are omitted to avoid duplicates i.e. C major ends at B, not C\n  // Major scales follow the pattern of W-W-H-W-W-W-H\n\n  const major = [0, 2, 4, 5, 7, 9, 11]; // Minor scales follow the pattern of W-H-W-W-H-W-W\n\n  const minor = [0, 2, 3, 5, 7, 8, 10]; // On change, calculate a new scale with input values\n\n  function appOnChange() {\n    options.scale = [];\n    let arr = mode === \"Major\" ? major : minor;\n    let start = notes.indexOf(note);\n    arr.forEach(function (d) {\n      options.scale.push(notes[(d + start) % notes.length]);\n    }); //setScale(options.scale);\n\n    scaleRef.current = options.scale;\n  }\n\n  async function initAudio() {\n    await Tone.start();\n    console.log(\"Audio initialized\");\n  }\n\n  let maxCubes = 7; // Continuous color schemes\n  //let colorC = (d) => d3.interpolateMagma( parseInt(d) / maxCubes );\n  //let colorC = (d) => d3.interpolateTurbo( parseInt(d) / maxCubes );\n  // Discrete color scheme\n\n  let colorC = d => d3.schemePaired[d % 10]; // Tone.js implementation\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"head\", {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Cube Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Cube, {\n        color: colorC,\n        maxCubes: maxCubes,\n        tone: Tone //synth={synths}\n        //scale={scale}\n        ,\n        scaleRef: scaleRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        onChange: appOnChange(),\n        modes: modes,\n        mode: mode,\n        setMode: setMode,\n        note: note,\n        notes: notes,\n        setNote: setNote,\n        tempo: tempo,\n        setTempo: setTempo,\n        initAudio: initAudio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ASbLRm2hTCz0Np16w6tdPgBMQe0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/timjh/Documents/GitHub/Three.js-Example/cube-notes/src/App.js"],"names":["Tone","React","useState","d3","Legend","Cube","App","options","note","mode","tempo","scale","setMode","setNote","setTempo","setScale","scaleRef","useRef","current","min","max","modes","baseNotes","notes","major","minor","appOnChange","arr","start","indexOf","forEach","d","push","length","initAudio","console","log","maxCubes","colorC","schemePaired"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport * as Tone from 'tone'\r\nimport React, { useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport Legend from './Legend.jsx';\r\nimport Cube from './Cube.jsx';\r\nfunction App() {\r\n\r\n\r\n\r\n  var options = {\r\n    note: 'A',\r\n    mode: \"Major\",\r\n    tempo: 90,\r\n    scale: ['A','B','C','D','E','F','G']\r\n  };\r\n\r\n\r\n  const [mode, setMode] = useState(options.mode);\r\n  const [note, setNote] = useState(options.note);\r\n  const [tempo, setTempo] = useState(options.tempo);\r\n  let [scale, setScale] = useState(options.scale);\r\n  //const [play, setPlay] = useState(options.play);\r\n\r\n  const scaleRef = React.useRef(options.scale);\r\n  scaleRef.current = options.scale;\r\n\r\n\r\n  // Define some music theory terms\r\n  // Starting at 'C0' and ending at 'G#9'\r\n  const min = 0;\r\n  const max = 9;\r\n\r\n  const modes = ['Major', 'Minor'];\r\n  const baseNotes = ['A','B','C','D','E','F','G'];\r\n  const notes = ['A','A#','B','C','C#','D','D#','E','F','F#','G','G#'];\r\n\r\n  // W - Whole step\r\n  // H - Half step\r\n  // 'Final' notes are omitted to avoid duplicates i.e. C major ends at B, not C\r\n\r\n\r\n  // Major scales follow the pattern of W-W-H-W-W-W-H\r\n  const major = [0,2,4,5,7,9,11];\r\n\r\n  // Minor scales follow the pattern of W-H-W-W-H-W-W\r\n  const minor = [0,2,3,5,7,8,10]; \r\n\r\n  \r\n  // On change, calculate a new scale with input values\r\n  function appOnChange() {\r\n  options.scale = [];\r\n  let arr = (mode === \"Major\") ? major : minor;\r\n  let start = notes.indexOf(note);\r\n\r\n  arr.forEach(function(d) {\r\n\r\n    options.scale.push(notes[((d + start) % notes.length)]);\r\n     });\r\n  //setScale(options.scale);\r\n  scaleRef.current = options.scale;\r\n\r\n}\r\n\r\nasync function initAudio() {\r\n\r\n  await Tone.start();\r\n  console.log(\"Audio initialized\");\r\n\r\n}\r\n\r\n\r\n  let maxCubes = 7;\r\n\r\n  // Continuous color schemes\r\n  //let colorC = (d) => d3.interpolateMagma( parseInt(d) / maxCubes );\r\n  //let colorC = (d) => d3.interpolateTurbo( parseInt(d) / maxCubes );\r\n\r\n  // Discrete color scheme\r\n  let colorC = (d) => d3.schemePaired[d % 10];\r\n\r\n\r\n  // Tone.js implementation\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <head>\r\n\r\n      <title>Cube Notes</title>\r\n\r\n    </head>\r\n\r\n    <div className=\"App\">\r\n\r\n        <Cube \r\n          color={colorC}\r\n          maxCubes={maxCubes}\r\n          tone={Tone}\r\n          //synth={synths}\r\n          //scale={scale}\r\n          scaleRef={scaleRef}\r\n        />\r\n\r\n        <Legend onChange = {appOnChange()}\r\n          modes={modes}\r\n          mode={mode}\r\n          setMode={setMode}\r\n          note={note}\r\n          notes={notes}\r\n          setNote={setNote}\r\n          tempo={tempo}\r\n          setTempo={setTempo}\r\n          initAudio={initAudio}/>\r\n\r\n    </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}