{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\timjh\\\\Documents\\\\GitHub\\\\Snowy_Scene\\\\src\\\\App.js\";\nimport './App.css';\nimport * as Tone from 'tone';\nimport React, { useState } from 'react';\nimport * as d3 from 'd3';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Legend from './Legend.jsx';\nimport Cube from './Cube.jsx';\nimport Environment from './Environment.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  let scene;\n\n  function initScene() {\n    scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x222244);\n    scene.add(new THREE.AmbientLight(0x444444));\n    scene.fog = new THREE.Fog(0x222244, 5000, 10000); // Create standard box geometry\n\n    var geometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n    var planeGeom = new THREE.PlaneGeometry(10000, 10000);\n    var planeMesh = new THREE.MeshBasicMaterial({\n      color: 0xc2bfb8,\n      side: THREE.DoubleSide\n    });\n    var plane = new THREE.Mesh(planeGeom, planeMesh);\n    plane.rotation.x = Math.PI / 2;\n    scene.add(plane);\n  }\n\n  const camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 20000);\n  camera.position.set(0, 1000, 5000);\n  camera.lookAt(0, 0, 0);\n  const renderer = new THREE.WebGLRenderer({\n    antialias: true\n  });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  renderer.toneMapping = THREE.ACESFilmicToneMapping;\n  renderer.setPixelRatio(window.devicePixelRatio);\n  document.body.appendChild(renderer.domElement);\n  const controls = new OrbitControls(camera, renderer.domElement);\n  controls.maxPolarAngle = Math.PI * 0.495;\n  controls.target.set(0, 500, 0);\n  controls.minDistance = 40.0;\n  controls.maxDistance = 200.0;\n  controls.update();\n  const clock = new THREE.Clock();\n  camera.position.z = 15;\n  initScene();\n\n  function animate() {\n    renderer.render(scene, camera);\n    requestAnimationFrame(animate);\n  }\n\n  animate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"head\", {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Snowy Scene\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/timjh/Documents/GitHub/Snowy_Scene/src/App.js"],"names":["Tone","React","useState","d3","THREE","OrbitControls","Legend","Cube","Environment","App","scene","initScene","Scene","background","Color","add","AmbientLight","fog","Fog","geometry","BoxGeometry","planeGeom","PlaneGeometry","planeMesh","MeshBasicMaterial","color","side","DoubleSide","plane","Mesh","rotation","x","Math","PI","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","lookAt","renderer","WebGLRenderer","antialias","setSize","toneMapping","ACESFilmicToneMapping","setPixelRatio","devicePixelRatio","document","body","appendChild","domElement","controls","maxPolarAngle","target","minDistance","maxDistance","update","clock","Clock","z","animate","render","requestAnimationFrame"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport * as Tone from 'tone'\r\nimport React, { useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport Legend from './Legend.jsx';\r\nimport Cube from './Cube.jsx';\r\nimport Environment from './Environment.jsx';\r\nfunction App() {\r\n\r\n\r\nlet scene;\r\n\r\n\r\nfunction initScene() {\r\n\r\n  scene = new THREE.Scene();\r\n  scene.background = new THREE.Color( 0x222244 );\r\n  scene.add( new THREE.AmbientLight( 0x444444 ) );\r\n  scene.fog = new THREE.Fog( 0x222244, 5000, 10000 ); \r\n\r\n  // Create standard box geometry\r\n  var geometry = new THREE.BoxGeometry( 0.5, 0.5, 0.5 );\r\n  var planeGeom = new THREE.PlaneGeometry(10000,10000);\r\n\r\n  var planeMesh = new THREE.MeshBasicMaterial( {color: 0xc2bfb8, side : THREE.DoubleSide })\r\n\r\n  var plane = new THREE.Mesh(planeGeom, planeMesh);\r\n\r\n  plane.rotation.x = Math.PI / 2;\r\n\r\n  scene.add(plane);\r\n  \r\n\r\n}\r\n  \r\n\r\n\r\n    const camera = new THREE.PerspectiveCamera( 90, window.innerWidth / window.innerHeight, 0.1, 20000 );\r\n\r\n    camera.position.set(0,1000,5000);\r\n    camera.lookAt(0,0,0);\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize( window.innerWidth, window.innerHeight );\r\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\r\n    renderer.setPixelRatio( window.devicePixelRatio );\r\n    document.body.appendChild( renderer.domElement );\r\n\r\n    const controls = new OrbitControls( camera, renderer.domElement );\r\n    controls.maxPolarAngle = Math.PI * 0.495;\r\n    controls.target.set( 0, 500, 0 );\r\n    controls.minDistance = 40.0;\r\n    controls.maxDistance = 200.0;\r\n    controls.update();\r\n\r\n\r\n\r\n    const clock = new THREE.Clock();\r\n\r\n\r\n\r\n    camera.position.z = 15;\r\n    initScene();\r\n    function animate() {\r\n\r\n\r\n\r\n    renderer.render( scene, camera );\r\n    requestAnimationFrame( animate );\r\n\r\n  }\r\n\r\n  animate();\r\n\r\n  return (\r\n    <>\r\n    <head>\r\n\r\n      <title>Snowy Scene</title>\r\n\r\n    </head>\r\n\r\n    <div className=\"App\">\r\n\r\n{/*        <Cube \r\n          color={colorC}\r\n          numCubes={numCubes}\r\n          tone={Tone}\r\n          scaleRef={scaleRef}\r\n          startRef={startRef}\r\n          speedRef={speedRef}\r\n\r\n        />\r\n\r\n        <Environment />*/}\r\n\r\n\r\n\r\n    </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}