{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\timjh\\\\Documents\\\\GitHub\\\\Snowy_Scene\\\\src\\\\App.js\";\nimport './App.css';\nimport * as Tone from 'tone';\nimport React, { useState } from 'react';\nimport * as d3 from 'd3';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport Legend from './Legend.jsx';\nimport Cube from './Cube.jsx';\nimport Environment from './Environment.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  function initScene() {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x222244);\n    scene.add(new THREE.AmbientLight(0x444444)); //scene.fog = new THREE.Fog( 0x222244, 50, 50 ); \n    // Create standard box geometry\n\n    var geometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n    var planeGeom = new THREE.PlaneGeometry(5000, 5000);\n    var planeMesh = new THREE.MeshBasicMaterial({\n      color: 0xc2bfb8,\n      side: THREE.DoubleSide\n    });\n    var plane = new THREE.Mesh(planeGeom, planeMesh);\n    plane.rotation.x = Math.PI / 2;\n    scene.add(plane);\n    renderer.render(scene, camera);\n  }\n\n  const camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 20000);\n  camera.position.set(0, 1000, 5000);\n  camera.lookAt(0, 0, 0);\n  const renderer = new THREE.WebGLRenderer({\n    antialias: true\n  });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  renderer.toneMapping = THREE.ACESFilmicToneMapping;\n  renderer.setPixelRatio(window.devicePixelRatio);\n  document.body.appendChild(renderer.domElement); // var sphere = new THREE.SphereGeometry(max+0.25);\n  // var object = new THREE.Mesh( sphere, new THREE.MeshBasicMaterial({ color: 0xff0000, transparent: true, opacity: 0.4 }) );\n  // var box = new THREE.BoxHelper( object );\n  // scene.add(box);\n  // scene.add(object);\n\n  const clock = new THREE.Clock();\n  const controls = new OrbitControls(camera, renderer.domElement);\n  camera.position.z = 15;\n  initScene();\n\n  function animate() {\n    requestAnimationFrame(animate);\n  }\n\n  animate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"head\", {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Snowy Scene\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/timjh/Documents/GitHub/Snowy_Scene/src/App.js"],"names":["Tone","React","useState","d3","THREE","OrbitControls","Legend","Cube","Environment","App","initScene","scene","Scene","background","Color","add","AmbientLight","geometry","BoxGeometry","planeGeom","PlaneGeometry","planeMesh","MeshBasicMaterial","color","side","DoubleSide","plane","Mesh","rotation","x","Math","PI","renderer","render","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","lookAt","WebGLRenderer","antialias","setSize","toneMapping","ACESFilmicToneMapping","setPixelRatio","devicePixelRatio","document","body","appendChild","domElement","clock","Clock","controls","z","animate","requestAnimationFrame"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,8CAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;;;AACA,SAASC,GAAT,GAAe;AAIf,WAASC,SAAT,GAAqB;AAEnB,UAAMC,KAAK,GAAG,IAAIP,KAAK,CAACQ,KAAV,EAAd;AACAD,IAAAA,KAAK,CAACE,UAAN,GAAmB,IAAIT,KAAK,CAACU,KAAV,CAAiB,QAAjB,CAAnB;AACAH,IAAAA,KAAK,CAACI,GAAN,CAAW,IAAIX,KAAK,CAACY,YAAV,CAAwB,QAAxB,CAAX,EAJmB,CAKnB;AAEA;;AACA,QAAIC,QAAQ,GAAG,IAAIb,KAAK,CAACc,WAAV,CAAuB,GAAvB,EAA4B,GAA5B,EAAiC,GAAjC,CAAf;AACA,QAAIC,SAAS,GAAG,IAAIf,KAAK,CAACgB,aAAV,CAAwB,IAAxB,EAA6B,IAA7B,CAAhB;AAIA,QAAIC,SAAS,GAAG,IAAIjB,KAAK,CAACkB,iBAAV,CAA6B;AAACC,MAAAA,KAAK,EAAE,QAAR;AAAkBC,MAAAA,IAAI,EAAGpB,KAAK,CAACqB;AAA/B,KAA7B,CAAhB;AAEA,QAAIC,KAAK,GAAG,IAAItB,KAAK,CAACuB,IAAV,CAAeR,SAAf,EAA0BE,SAA1B,CAAZ;AAEAK,IAAAA,KAAK,CAACE,QAAN,CAAeC,CAAf,GAAmBC,IAAI,CAACC,EAAL,GAAU,CAA7B;AAEApB,IAAAA,KAAK,CAACI,GAAN,CAAUW,KAAV;AAEAM,IAAAA,QAAQ,CAACC,MAAT,CAAiBtB,KAAjB,EAAwBuB,MAAxB;AAED;;AAKC,QAAMA,MAAM,GAAG,IAAI9B,KAAK,CAAC+B,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA5D,EAAyE,GAAzE,EAA8E,KAA9E,CAAf;AAIAJ,EAAAA,MAAM,CAACK,QAAP,CAAgBC,GAAhB,CAAoB,CAApB,EAAsB,IAAtB,EAA2B,IAA3B;AACAN,EAAAA,MAAM,CAACO,MAAP,CAAc,CAAd,EAAgB,CAAhB,EAAkB,CAAlB;AAEA,QAAMT,QAAQ,GAAG,IAAI5B,KAAK,CAACsC,aAAV,CAAwB;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAxB,CAAjB;AACAX,EAAAA,QAAQ,CAACY,OAAT,CAAkBR,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;AACAN,EAAAA,QAAQ,CAACa,WAAT,GAAuBzC,KAAK,CAAC0C,qBAA7B;AACAd,EAAAA,QAAQ,CAACe,aAAT,CAAwBX,MAAM,CAACY,gBAA/B;AACAC,EAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA2BnB,QAAQ,CAACoB,UAApC,EA3Ca,CAgDb;AACA;AACA;AACA;AACA;;AAEE,QAAMC,KAAK,GAAG,IAAIjD,KAAK,CAACkD,KAAV,EAAd;AAEA,QAAMC,QAAQ,GAAG,IAAIlD,aAAJ,CAAmB6B,MAAnB,EAA2BF,QAAQ,CAACoB,UAApC,CAAjB;AAEAlB,EAAAA,MAAM,CAACK,QAAP,CAAgBiB,CAAhB,GAAoB,EAApB;AACA9C,EAAAA,SAAS;;AACT,WAAS+C,OAAT,GAAmB;AAKnBC,IAAAA,qBAAqB,CAAED,OAAF,CAArB;AAED;;AAEDA,EAAAA,OAAO;AAEP,sBACE;AAAA,4BACA;AAAA,6BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADA,eAOA;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA,kBADF;AA4BD;;KAnGQhD,G;AAqGT,eAAeA,GAAf","sourcesContent":["import './App.css';\r\nimport * as Tone from 'tone'\r\nimport React, { useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport Legend from './Legend.jsx';\r\nimport Cube from './Cube.jsx';\r\nimport Environment from './Environment.jsx';\r\nfunction App() {\r\n\r\n\r\n\r\nfunction initScene() {\r\n\r\n  const scene = new THREE.Scene();\r\n  scene.background = new THREE.Color( 0x222244 );\r\n  scene.add( new THREE.AmbientLight( 0x444444 ) );\r\n  //scene.fog = new THREE.Fog( 0x222244, 50, 50 ); \r\n\r\n  // Create standard box geometry\r\n  var geometry = new THREE.BoxGeometry( 0.5, 0.5, 0.5 );\r\n  var planeGeom = new THREE.PlaneGeometry(5000,5000);\r\n\r\n\r\n\r\n  var planeMesh = new THREE.MeshBasicMaterial( {color: 0xc2bfb8, side : THREE.DoubleSide })\r\n\r\n  var plane = new THREE.Mesh(planeGeom, planeMesh);\r\n\r\n  plane.rotation.x = Math.PI / 2;\r\n\r\n  scene.add(plane);\r\n\r\n  renderer.render( scene, camera );\r\n\r\n}\r\n  \r\n\r\n\r\n\r\n  const camera = new THREE.PerspectiveCamera( 90, window.innerWidth / window.innerHeight, 0.1, 20000 );\r\n\r\n\r\n\r\n  camera.position.set(0,1000,5000);\r\n  camera.lookAt(0,0,0);\r\n\r\n  const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n  renderer.setSize( window.innerWidth, window.innerHeight );\r\n  renderer.toneMapping = THREE.ACESFilmicToneMapping;\r\n  renderer.setPixelRatio( window.devicePixelRatio );\r\n  document.body.appendChild( renderer.domElement );\r\n\r\n\r\n\r\n\r\n  // var sphere = new THREE.SphereGeometry(max+0.25);\r\n  // var object = new THREE.Mesh( sphere, new THREE.MeshBasicMaterial({ color: 0xff0000, transparent: true, opacity: 0.4 }) );\r\n  // var box = new THREE.BoxHelper( object );\r\n  // scene.add(box);\r\n  // scene.add(object);\r\n\r\n    const clock = new THREE.Clock();\r\n\r\n    const controls = new OrbitControls( camera, renderer.domElement );\r\n\r\n    camera.position.z = 15;\r\n    initScene();\r\n    function animate() {\r\n\r\n\r\n\r\n\r\n    requestAnimationFrame( animate );\r\n\r\n  }\r\n\r\n  animate();\r\n\r\n  return (\r\n    <>\r\n    <head>\r\n\r\n      <title>Snowy Scene</title>\r\n\r\n    </head>\r\n\r\n    <div className=\"App\">\r\n\r\n{/*        <Cube \r\n          color={colorC}\r\n          numCubes={numCubes}\r\n          tone={Tone}\r\n          scaleRef={scaleRef}\r\n          startRef={startRef}\r\n          speedRef={speedRef}\r\n\r\n        />\r\n\r\n        <Environment />*/}\r\n\r\n\r\n\r\n    </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}